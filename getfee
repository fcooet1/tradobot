import time, requests, hashlib, hmac

def fnFee():

	URL = 'https://api.bittrex.com/v3/account/volume'
	APIKEY = ''
	APISECRET = ''
	method='GET'
	timestamp = str(int(time.time()*1000))
	requestbody = ''
	ach = hashlib.sha512(requestbody.encode()).hexdigest()
	presignature=timestamp+URL+method+ach
	signature=hmac.new(APISECRET.encode(),presignature.encode(),digestmod=hashlib.sha512).hexdigest()

	rauth=requests.get(URL,headers={'Api-Key': str(APIKEY), 'Api-Timestamp': timestamp, 'Api-Content-Hash': ach, 'Api-Signature': signature}).json()
	bittrexcommision=[[5000,0.0075,0.0075],[10000,0.005,0.005],[25000,0.0035,0.0035],
                  [50000,0.002,0.002],[1000000,0.0012,0.0018],[10000000,0.0005,0.0015],
                  [60000000,0.0002,0.001],[60000000,0.0,0.0008],[100000000,0.0,0.0005]]
	fee=0.0
	for i in reversed(range(len(bittrexcommision))):
		if float(rauth['volume30days'])<=bittrexcommision[i][0]:
			fee=float(bittrexcommision[i][1])
	return fee
		

a=fnFee()
print(a)
#regla general de reventa respecto a los fees: con c1 monedas, compras x goods a precio p1, con fee f1. x=c1(1-f1)/p1.
#luego vendes x goods a precio p2 por c2 monedas, menos fee f2  c2=x(1-f2)*p2
#ergo, c2>c1 si y solo si p2>p1/((1-f1)*(1-f2))
